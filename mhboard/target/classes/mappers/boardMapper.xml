<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper

    PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"

    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

    

<mapper namespace="org.mhboard.web.mappers.boardMapper">


<!-- list 불러오기 -->
	<select id = "readList" resultType = "boardVO" parameterType ="boardVO">
	SELECT 
		BID, 
		CATE_CD, 
		TITLE, 
		CONTENT, 
		TAG, 
		view_cnt, 
		reg_id, 
		reg_dt, 
		edit_dt
	FROM
		mh_board
	ORDER BY bid desc
	
	<!-- 검색기능 추가 -->
	<trim prefix="WHERE" prefixOverrides="AND|OR">

			<if test="searchType=='title' and keyword != null and keyword != '' ">

				AND TITLE like CONTCAT('%', #{keyword}, '%')

			</if>

			<if test="searchType=='content' and keyword != null and keyword != '' ">

				AND CONTENT like CONCAT('%', #{keyword}, '%')

			</if>

			<if test="searchType=='reg_id' and keyword != null and keyword != '' ">

				AND reg_id like CONCAT('%', #{keyword}, '%')

			</if>	

		</trim>
		<!-- 여기까지 검색기능 -->
	
	
	<!-- 페이징처리 -->
	LIMIT #{startList}, #{listSize}
	
	</select>


	<!-- 페이징처리 구문 -->
	<select id="readListCnt" resultType="int">

		SELECT
			count(*) as listCnt
		FROM
			mh_board


<!-- 검색기능 -->

<trim prefix="WHERE" prefixOverrides="AND|OR">

<if test="keyword != null and keyword != '' ">

			<if test="searchType=='title'">

				AND TITLE like CONCAT('%', #{keyword}, '%')

			</if>

			<if test="searchType=='content'">

				AND CONTENT like CONCAT('%', #{keyword}, '%')

			</if>

			<if test="searchType=='regId'">

				AND regId like CONCAT('%', #{keyword}, '%')

			</if>

      </if>

	</trim>


<!-- 여기까지 검색기능 -->



	</select>

	<!-- 여기까지 페이징처리 -->






	<!-- contents 가져오기 -->
	<select id ="readContent" resultType = "boardVO" parameterType = "boardVO">
	SELECT
		BID, CATE_CD, TITLE, CONTENT, TAG, view_cnt, reg_id, reg_dt, edit_dt
		FROM
		mh_board
		WHERE
		BID = #{bid}
	</select>


	<!-- 게시물 작성 -->
	<insert id = "write" parameterType = "boardVO">
	
	
		
		INSERT INTO mh_board (CATE_CD, TITLE, CONTENT, TAG, VIEW_CNT, REG_ID, REG_DT, EDIT_DT)
		VALUES(
		
		#{cateCd},
		#{title},
		#{content},
		#{tag},
		0,
		#{regId},
		now(),
		now()
		)
	
	
	  <selectKey resultType="int" keyProperty="bid" order="AFTER">
        SELECT LAST_INSERT_ID()
    </selectKey>
	
	
	</insert>

	<!-- 파일 업로드 구현중 -->
	<insert id = "insertFile" parameterType = "hashMap">
	
	
	
		INSERT INTO mh_file (bid, org_file_name, str_file_name, file_size, upload_date)
		VALUES(
		
			#{bid},
			#{orgFileName},
			#{strFileName},
			#{fileSize},
			now()
		)
		
	
	</insert>


	<!-- 업로드된 파일  조회기능 구현중 -->
	<select id ="selectFile" parameterType="int" resultType="hashMap">
	
	SELECT
		fid,
		org_file_name,
		ROUND(file_size/1024,1) AS file_size
	FROM
		mh_file
	WHERE
		bid = #{bid}
		AND del_type = 'N'
		ORDER BY fid asc
	
	</select>
	
	<!-- 업로드된 파일 다운로드 기능 구현중 -->
	<select id="selectFileInfo" parameterType="hashMap" resultType="hashMap">
	SELECT 
		str_file_name,
		org_file_name
	FROM 
		mh_file
	WHERE fid = #{fid}
	</select>
	
	<!-- 삭제된 첨부파일 type 변경 쿼리 -->
	<update id ="updateFile" parameterType = "hashMap">
		UPDATE mh_file SET
		del_type = 'Y'
		WHERE fid = #{fid}
	</update>
	


	<!-- 파일 삭제 쿼리 -->
	<delete id = "deleteFile" parameterType = "int">
	
		DELETE FROM mh_file
		WHERE bid = #{bid}
	
	</delete>




	<!-- 수정하기 -->

	<update id = "update" parameterType = "boardVO">
	
	UPDATE mh_board SET
		CATE_CD = #{cateCd},
		TITLE = #{title},
		CONTENT = #{content},
		TAG = #{tag},
		EDIT_DT = now()
		WHERE
			BID = #{bid}
		
	</update>
	
	
	

	<!-- 삭제하기 -->
	
	<delete id="delete" parameterType = "int">
	DELETE FROM mh_board
	WHERE BID = #{bid}
	</delete>



	<!-- 조회수 증가 -->
	<update id ="updateViewCnt" parameterType = "boardVO">
	
	UPDATE mh_board SET
		VIEW_CNT = VIEW_CNT + 1
		WHERE
		BID = #{bid}
	
	</update>


	


</mapper>


